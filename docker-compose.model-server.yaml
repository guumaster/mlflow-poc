services:

  mlflow-diabetes-model:
    container_name: mlflow-diabetes-model
    profiles:
      - model-server
    image: mlflow-diabetes-model:${MODEL_VERSION:-1}  # Update with your built image
    ports:
      - "7000:8080"
      - "8082:8082"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f  http://localhost:7000/v2/models/diabetes-model/ready || exit 1" ]
      start_interval: 5s
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      # Debugging
      - MLSERVER_DEBUG=true
      - PYTHONDEBUG=1
      - LOGLEVEL=DEBUG
    depends_on:
      minio:
        condition: service_healthy
      mlflow:
        condition: service_started
    networks:
      - mlflow-network

  manual-diabetes-model-server:
    container_name: manual-diabetes-model-server
    profiles:
      - model-server
    build:
      context: .
      target: model-server
    ports:
      - "7001:7000"
    environment:
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "admin123"
      MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
      #BACKEND_URI: "postgresql://mlflow:mlflow_pass@postgres:5432"
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
      MODEL_URI: "models:/diabetes-model@dev"
      #ARTIFACT_ROOT: "s3://mlflow-artifacts/"
    depends_on:
      postgres:
        condition: service_started
      minio:
        condition: service_healthy
      mlflow:
        condition: service_started
    networks:
      - mlflow-network
